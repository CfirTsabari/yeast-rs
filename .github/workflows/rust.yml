name: Rust

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  ci-pass:
    name: CI is green
    runs-on: ubuntu-latest
    needs:
      - style
      - test
      - build
      - commitlint
    steps:
      - run: exit 0

  build:
    name: Build code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: set up rust from toolcahin file
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
      - name: build workspace
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: -vv --all-features --tests
  test:
    name: Run unit tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: set up rust from toolcahin file
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal

      - name: run tests on tokio
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: -vv --features tokio-runtime
      - name: run tests on async-std
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: -vv --features async-std-runtime
      - name: test examples
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: -vv --examples

  style:
    name: Run rustfmt and clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: set up rust from toolcahin file with rustfmt and clippy
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          components: rustfmt, clippy

      - name: check format
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: -- --check
      - name: Annotate commit with clippy warnings
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --tests --all-targets --all-features

      - name: check clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --tests --all-targets --all-features -- -D warnings

  commitlint:
    name: Run commitlint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: wagoid/commitlint-github-action@v3
  benchmark:
    name: Run benchmark
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    steps:
      - uses: actions/checkout@v2
      - name: set up rust from toolcahin file
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
      - name: run benchmark
        run: cargo bench --bench benchmark --all-features -- --output-format bencher | tee output.txt
      - name: Store benchmark result
        uses: rhysd/github-action-benchmark@v1
        with:
          name: Rust Benchmark
          tool: 'cargo'
          output-file-path: output.txt
          github-token: ${{ secrets.PERSONAL_GITHUB_TOKEN }}
          auto-push: true
          # Show alert with commit comment on detecting possible performance regression
          alert-threshold: '200%'
          comment-on-alert: true
          fail-on-alert: true
          alert-comment-cc-users: '@CfirTsabari '
